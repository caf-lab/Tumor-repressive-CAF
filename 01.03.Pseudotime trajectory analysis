---
title: "Pseudotime_analysis_of_fibroblast_AD"
author: "Seok-hyung Kim"
date: "2024-07-18"
output: html_document
---
# monocle3 is used.
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r warning=FALSE, message=FALSE}
set.seed(1234)
library(dplyr)
library(Seurat)
library(cowplot)
library(Matrix)
library(patchwork)
library(ggplot2)
library(monocle3)
library(SeuratWrappers)
library(tidyverse)
```

## Import dataset CRC_2022-09-05.rds)
```{r echo=TRUE, eval=FALSE}
ds <-readRDS("output/CRC_final_2022-09-05.rds")
ds.AD <- subset(ds, idents = c("fibroblast-1", "fibroblast_stem-2"))  #ds.AD : dataset of "A", "D" clusters

ds.AD@reductions$umap@cell.embeddings %>% as.data.frame() ->umap.value 
toRemove <- umap.value %>% filter(UMAP_1 < 0 | UMAP_2 > -6) %>% rownames()
ds.AD_filtered <- ds.AD[,!colnames(ds.AD) %in% toRemove]
DimPlot(ds.AD_filtered, label=T)

ds.AD_filtered <- RenameIdents(object = ds.AD_filtered, "fibroblast-1" = "A")
ds.AD_filtered <- RenameIdents(object = ds.AD_filtered, "fibroblast_stem-2" = "D")
Idents(ds.AD_filtered)
```

## Pseudotime analysis   
```{r echo=TRUE, eval=TRUE}
# ...1 Convert to cell_data_set object ------
cds <- as.cell_data_set(ds.AD_filtered)
cds    # dim: 25174 4304 

# to get cell metadata
dim(colData(cds)) 
colData(cds)[1:3,1:3]
colnames(colData(cds))

# to gene metdata
dim(fData(cds))
fData(cds)[1:3,]
rownames(fData(cds))[1:5]

# since it misses the gene_short_name column, let's add it
fData(cds)$gene_short_name <- rownames(fData(cds))

# to get counts
counts(cds)[1:3.1:2]

# ...2. Cluster cells (using clustering info from seurat's UMAP)------
# assign paritions
reacreate.partition <- c(rep(1,length(cds@colData@rownames)))
names(reacreate.partition) <- cds@colData@rownames
reacreate.partition <- as.factor(reacreate.partition)
cds@clusters$UMAP$partitions <- reacreate.partition

# Assign the cluster info 
list_cluster <- ds.AD_filtered@active.ident
cds@clusters$UMAP$clusters <- list_cluster

# Assign UMAP coordinate - cell embeddings
cds@int_colData@listData$reducedDims$UMAP <- ds.AD_filtered@reductions$umap@cell.embeddings
```

```{r warning=FALSE, message=FALSE}
# ...3. Learn trajectory graph ----------------
cds <- learn_graph(cds, use_partition = FALSE)
plot_cells(cds,
           color_cells_by = 'cluster',
           label_groups_by_cluster = FALSE,
           label_branch_points = FALSE,
           label_roots = FALSE,
           label_leaves = FALSE,
           group_label_size = 5)

# ...4. Order the cells in pseudotime ----------
cds <- order_cells(cds, reduction_method = 'UMAP', root_cells = colnames(cds[,clusters(cds) == 'A']))
plot_cells(cds,
           color_cells_by = 'pseudotime',
           label_groups_by_cluster = FALSE,
           label_branch_points = FALSE,
           label_roots = FALSE,
           label_leaves = FALSE)
```

```{r warning=FALSE, message=FALSE}
# cells ordered by monocle3 pseudotime
cds$monocle3_pseudotime <- pseudotime(cds)
data.pseudo <- as.data.frame(colData(cds))

ggplot(data.pseudo, aes(monocle3_pseudotime, reorder(ident, monocle3_pseudotime, median), fill = ident)) +
  geom_boxplot()
```

```{r warning=FALSE, message=FALSE}
# ...5. Finding genes that change as a function of pseudotime --------------------
deg_fbst <- graph_test(cds, neighbor_graph = 'principal_graph', cores = 4)
deg_fbst %>% 
  arrange(desc(morans_test_statistic)) %>% 
  filter(status == 'OK') %>% 
  head(n=30)
```

```{r}
FeaturePlot(ds.AD_filtered, features = c('ADAMDEC1', 'DCN', 'F3', 'CXCL14'))
FeaturePlot(ds.AD_filtered, features = c('CFD', 'COL1A1', 'CTSC', 'MFAP5'))
FeaturePlot(ds.AD_filtered, features = c('CALD1', 'COL1A2', 'IGFBP6', 'S100A4'))
FeaturePlot(ds.AD_filtered, features = c('CCL8', 'C7', 'PLAT', 'ANXA2'))
FeaturePlot(ds.AD_filtered, features = c('PCOLCE2', 'S100A10', 'COL3A1', 'KCNN3'))
```

```{r}
# visualizing pseudotime in seurat
ds.AD_filtered$pseudotime <- pseudotime(cds)
FeaturePlot(ds.AD_filtered, features = "pseudotime", label = T)
```
